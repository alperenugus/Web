{"version":3,"sources":["components/ToDo.js","components/AddToList.js","components/ToDoListItem.js","components/Search.js","components/ToDoList.js","App.js","serviceWorker.js","index.js"],"names":["ToDo","toDo","isCompleted","this","AddToList","state","newItem","handleSubmit","document","getElementById","reset","alert","newToDoItem","props","onAdd","focus","setState","className","id","onSubmit","e","preventDefault","type","placeholder","style","padding","margin","onChange","text","target","value","onClick","React","Component","ToDoListItem","editState","editString","handleCheckBox","onCheckBoxChange","onTopClick","onBottomClick","onUpClick","onDownClick","onListItemClicked","onSaveClicked","editItem","autoFocus","aria-describedby","onKeyDown","keyCode","marginLeft","checked","key","width","height","viewBox","fill","xmlns","fillRule","d","onDelete","Search","searchString","handleSearch","onSearch","InitialState","toDoList","ToDoList","saveTheState","localStorage","setItem","JSON","stringify","addItem","newArr","push","deleteItem","index","splice","toTop","unshift","temp","length","str","console","log","getItem","parse","window","addEventListener","listItems","map","listItem","filter","toLowerCase","indexOf","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4f5e0b7f.chunk.js","sourcesContent":["export default class ToDo {\n    constructor(toDo, isCompleted) {\n        this.toDo = toDo;\n        this.isCompleted = isCompleted;\n    }\n}","import React from 'react';\nimport ToDo from './ToDo';\n\nexport default class AddToList extends React.Component {\n\n    state = { newItem: '' };\n\n    handleSubmit = () => {\n        document.getElementById('add-to-list-form').reset()\n\n        if (this.state.newItem === '') alert('You should enter a new to do item.')\n        else {\n            var newToDoItem = new ToDo(this.state.newItem, false)\n            this.props.onAdd(newToDoItem)\n            document.getElementById('add-to-list-input').focus()\n        }\n        this.setState({ newItem: '' })\n    }\n\n    render() {\n        return (\n            <div className='d-flex justify-content-center'>\n                <form className='form-group' id='add-to-list-form' onSubmit={(e) => { e.preventDefault(); this.handleSubmit() }}>\n                    <input\n                        id='add-to-list-input'\n                        type='text'\n                        className='form-control'\n                        placeholder='Enter Item'\n                        style={{ padding: 20, margin: 10 }}\n                        onChange={(text) => { this.setState({ newItem: text.target.value }) }}\n                    />\n                    <div className='text-center'>\n                        <button type='button' className='btn btn-primary btn-sm' onClick={() => { this.handleSubmit() }}>Add</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {useState} from 'react';\n\nexport default class ToDoListItem extends React.Component {\n\n    state = {\n        editState: false,\n        editString: ''\n    }\n\n    handleCheckBox = () => {\n        this.props.onCheckBoxChange(this.props.id)\n    }\n\n    onTopClick = () => {\n        this.props.onTopClick(this.props.id)\n    }\n\n    onBottomClick = () => {\n        this.props.onBottomClick(this.props.id)\n    }\n\n    onUpClick = () => {\n        this.props.onUpClick(this.props.id)\n    }\n\n    onDownClick = () => {\n        this.props.onDownClick(this.props.id)\n    }\n\n    onListItemClicked = () => {\n        this.setState({editState: true})\n    }\n\n    onSaveClicked = () => {\n        if(this.state.editString == ''){\n            alert('You should enter a new to do item.')\n        }else{\n            this.props.editItem(this.state.editString, this.props.id)\n            this.setState({editState: false, editString:''})\n        }\n\n    }\n\n    render() {\n        if(!this.state.editState){\n            return (\n                <div className=\"d-flex\">\n                    <div className=\"p-2\">\n                        <input type=\"checkbox\" className=\"form-check-input\" checked={this.props.isCompleted} onChange={this.handleCheckBox}></input>\n                    </div>\n                    <div className=\"mr-auto p-2\">\n                        <li className=\"mr-auto\" onClick={this.onListItemClicked} key={this.props.id} id={this.props.id}>{this.props.id + 1}. {this.props.toDo}</li>\n                    </div>\n                    <div className=\"p-1\">\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onUpClick}>\n                            <svg className=\"bi bi-arrow-up\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0V4a.5.5 0 0 1 .5-.5z\" />\n                                <path fillRule=\"evenodd\" d=\"M7.646 2.646a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8 3.707 5.354 6.354a.5.5 0 1 1-.708-.708l3-3z\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"p-1\">\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onDownClick}>\n                            <svg className=\"bi bi-arrow-down\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M4.646 9.646a.5.5 0 0 1 .708 0L8 12.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z\" />\n                                <path fillRule=\"evenodd\" d=\"M8 2.5a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-1 0V3a.5.5 0 0 1 .5-.5z\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"p-1\">\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onBottomClick}>\n                            <svg className=\"bi bi-arrow-down-circle-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 5a.5.5 0 0 0-1 0v4.793L5.354 7.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 9.793V5z\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"p-1\">\n                        <button type=\"button\" className=\"btn btn-default\" onClick={this.onTopClick}>\n                            <svg className=\"bi bi-arrow-up-circle-fill\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-10.646.354a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 6.207V11a.5.5 0 0 1-1 0V6.207L5.354 8.354z\" />\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"p-1\">\n                        <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={() => { this.props.onDelete(this.props.id) }}>X</button>\n                    </div>\n                </div>\n            )\n        }\n        else{\n            return(\n                <div className=\"p-1\">\n                    <input autoFocus type=\"text\" className=\"form-control\" \n                    id=\"to-do-list-edit-text\" aria-describedby=\"emailHelp\" \n                    placeholder={this.props.toDo} \n                    onChange={(text) => { this.setState({ editString: text.target.value}, this.onListItemClicked())}}\n                    onKeyDown={(e) => {if(e.keyCode == 13) this.onSaveClicked()}}></input>\n                    <div className=\"p-1\">\n                    <button type=\"button\" className=\"btn btn-primary btn-sm\" style={{ marginLeft: \"auto\" }} onClick={this.onSaveClicked}>Save</button>\n                    </div>\n                </div>\n            ) \n        }\n    }\n}\n","import React from 'react';\n\nexport default class Search extends React.Component {\n\n    state = { searchString: '' };\n\n    handleSearch = () => {\n        this.props.onSearch(this.state.searchString)\n    }\n\n    render() {\n        return (\n            <div className=\"d-flex justify-content-center\">\n                <form className=\"form-group\"  onSubmit={(e) => { e.preventDefault(); }}>\n                    <input\n                        id='search-input'\n                        type='text'\n                        className='form-control'\n                        placeholder='Search'\n                        style={{ padding: 20, margin: 10 }}\n                        onChange={(text) => { this.setState({ searchString: text.target.value }, () => {this.handleSearch()});}}\n                    />\n                </form>\n            </div>\n        )\n    }\n\n\n\n}","import React from 'react';\nimport ToDo from './ToDo'\nimport AddToList from './AddToList'\nimport ToDoListItem from './ToDoListItem'\nimport Search from './Search';\n\nconst InitialState = {\n    toDoList: [new ToDo('Code', true), new ToDo('Eat', false), new ToDo('Sleep', false), new ToDo('Repeat', false)],\n    searchString: ''\n}\n\nexport default class ToDoList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        // Retrieve the last state\n        this.state = localStorage.getItem('listState') ? JSON.parse(localStorage.getItem('listState')) : InitialState;\n        this.state.searchString = ''\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.saveTheState);\n        document.getElementById('search-input').focus()\n    }\n\n    saveTheState = () => {\n        localStorage.setItem('listState', JSON.stringify(this.state));\n    }\n\n    addItem = (newItem) => {\n        var newArr = this.state.toDoList\n        newArr.push(newItem)\n        this.setState({ toDoList: newArr })\n    }\n\n    editItem = (editString, id) => {\n        var newArr = this.state.toDoList\n        var newToDoItem =  this.state.toDoList[id]\n        newToDoItem.toDo = editString\n        newArr[id] = newToDoItem\n        this.setState({ toDoList: newArr })\n    }\n\n    deleteItem = (index) => {\n        var newArr = this.state.toDoList\n        newArr.splice(index, 1)\n        this.setState({ toDoList: newArr })\n    }\n\n    handleCheckBox = (index) => {\n        var newArr = this.state.toDoList\n        newArr[index].isCompleted = !newArr[index].isCompleted\n        this.setState({ toDoList: newArr })\n    }\n\n    onTopClick = (index) => {\n        var toTop = this.state.toDoList[index]\n        var newArr = this.state.toDoList\n        newArr.splice(index, 1)\n        newArr.unshift(toTop)\n        this.setState({ toDoList: newArr })\n    }\n\n    onBottomClick = (index) => {\n        var toTop = this.state.toDoList[index]\n        var newArr = this.state.toDoList\n        newArr.splice(index, 1)\n        newArr.push(toTop)\n        this.setState({ toDoList: newArr })\n    }\n\n    onUpClick = (index) => {\n        if (index === 0) {\n            return\n        }\n        else {\n            var newArr = this.state.toDoList\n            var temp = newArr[index - 1]\n            newArr[index - 1] = newArr[index]\n            newArr[index] = temp\n            this.setState({ toDoList: newArr })\n        }\n    }\n\n    onDownClick = (index) => {\n        if (index === this.state.toDoList.length - 1) {\n            return\n        }\n        else {\n            var newArr = this.state.toDoList\n            var temp = newArr[index + 1]\n            newArr[index + 1] = newArr[index]\n            newArr[index] = temp\n            this.setState({ toDoList: newArr })\n        }\n    }\n\n    handleSearch = (str) => {\n        this.setState({searchString: str})\n        console.log(\"Search String is:\" + str)\n    }\n\n\n    render() {\n\n        var listItems = []\n\n        if(this.state.searchString === ''){\n            listItems = this.state.toDoList.map((listItem, index) => {\n                return <ToDoListItem {...listItem} id={index}\n                    editItem={this.editItem}\n                    onDelete={this.deleteItem} onCheckBoxChange={this.handleCheckBox}\n                    onTopClick={this.onTopClick} onBottomClick={this.onBottomClick}\n                    onUpClick={this.onUpClick} onDownClick={this.onDownClick}></ToDoListItem>\n            })\n        }\n        else{\n        listItems = this.state.toDoList.filter(listItem => listItem.toDo.toLowerCase().indexOf(this.state.searchString.toLowerCase()) > -1).map((listItem, index) => {\n            return <ToDoListItem {...listItem} id={index}\n                editItem={this.editItem}\n                onDelete={this.deleteItem} onCheckBoxChange={this.handleCheckBox}\n                onTopClick={this.onTopClick} onBottomClick={this.onBottomClick}\n                onUpClick={this.onUpClick} onDownClick={this.onDownClick}></ToDoListItem>\n        })\n        }\n\n        return (<div id='ToDoList'>\n            <div id='SearchForm'><Search onSearch={this.handleSearch}></Search></div>\n            <div id='ListItems'>{listItems}</div>\n            <br></br>\n            <div id='AddToListForm'><AddToList onAdd={this.addItem}></AddToList></div>\n        </div>\n        )\n    }\n\n}\n","import React from 'react';\nimport ToDoList from './components/ToDoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n\n      <div className=\"jumbotron\">\n        <h1>To Do List</h1>\n        <ToDoList></ToDoList>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}